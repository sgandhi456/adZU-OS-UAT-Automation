I 2019-10-02 14:44:01:867 server.cc(86) Starting WebDriver server on port: '38571' on host: ''
T 2019-10-02 14:44:01:867 server.cc(634) Entering Server::PopulateCommandRepository
T 2019-10-02 14:44:01:867 IEServer.cpp(32) Entering IEServer::IEServer
I 2019-10-02 14:44:01:868 IEServer.cpp(33) Driver version: 3.6.0.0 (32-bit)
T 2019-10-02 14:44:01:868 server.cc(121) Entering Server::Start
D 2019-10-02 14:44:01:868 server.cc(148) Civetweb ACL is -0.0.0.0/0,+127.0.0.1
T 2019-10-02 14:44:02:122 server.cc(174) Entering Server::ProcessRequest
T 2019-10-02 14:44:02:122 server.cc(183) Process request with: URI: /status HTTP verb: GET
body: {}
T 2019-10-02 14:44:02:122 server.cc(272) Entering Server::DispatchCommand
T 2019-10-02 14:44:02:122 server.cc(583) Entering Server::LookupCommand
D 2019-10-02 14:44:02:122 server.cc(281) Command: GET /status {}
T 2019-10-02 14:44:02:123 IEServer.cpp(51) Entering IEServer::GetStatus
T 2019-10-02 14:44:02:123 response.cc(72) Entering Response::SetSuccessResponse
T 2019-10-02 14:44:02:124 response.cc(78) Entering Response::SetResponse
T 2019-10-02 14:44:02:124 response.cc(51) Entering Response::Serialize
D 2019-10-02 14:44:02:124 server.cc(338) Response: {"value":{"build":{"version":"3.6.0.0 (32-bit)"},"message":"Ready to create session","os":{"arch":"x64","name":"windows","version":"10.0.17134.376 (WinBuild.160101.0800)"},"ready":true}}

T 2019-10-02 14:44:02:124 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-02 14:44:02:124 response.cc(30) Entering Response::Deserialize
T 2019-10-02 14:44:02:124 server.cc(445) Entering Server::SendHttpOk
T 2019-10-02 14:44:02:137 server.cc(174) Entering Server::ProcessRequest
T 2019-10-02 14:44:02:137 server.cc(238) Entering Server::ReadRequestBody
T 2019-10-02 14:44:02:137 server.cc(183) Process request with: URI: /session HTTP verb: POST
body: {
  "desiredCapabilities": {
    "se:ieOptions": {
      "ie.usePerProcessProxy": "true",
      "ignoreProtectedModeSettings": true
    },
    "browserName": "internet explorer",
    "ie.usePerProcessProxy": "true",
    "ignoreProtectedModeSettings": true
  },
  "capabilities": {
    "firstMatch": [
      {
        "browserName": "internet explorer",
        "se:ieOptions": {
          "ie.usePerProcessProxy": "true",
          "ignoreProtectedModeSettings": true
        }
      }
    ]
  }
}
T 2019-10-02 14:44:02:137 server.cc(272) Entering Server::DispatchCommand
T 2019-10-02 14:44:02:138 server.cc(583) Entering Server::LookupCommand
D 2019-10-02 14:44:02:138 server.cc(281) Command: POST /session {
  "desiredCapabilities": {
    "se:ieOptions": {
      "ie.usePerProcessProxy": "true",
      "ignoreProtectedModeSettings": true
    },
    "browserName": "internet explorer",
    "ie.usePerProcessProxy": "true",
    "ignoreProtectedModeSettings": true
  },
  "capabilities": {
    "firstMatch": [
      {
        "browserName": "internet explorer",
        "se:ieOptions": {
          "ie.usePerProcessProxy": "true",
          "ignoreProtectedModeSettings": true
        }
      }
    ]
  }
}
T 2019-10-02 14:44:02:138 IEServer.cpp(42) Entering IEServer::InitializeSession
T 2019-10-02 14:44:02:138 IESession.cpp(38) Entering IESession::Initialize
D 2019-10-02 14:44:02:138 IESession.cpp(53) Mutex acquired for session initalization
T 2019-10-02 14:44:02:138 IECommandExecutor.cpp(386) Entering IECommandExecutor::ThreadProc
T 2019-10-02 14:44:02:142 IECommandExecutor.cpp(47) Entering IECommandExecutor::OnCreate
T 2019-10-02 14:44:02:144 IECommandExecutor.cpp(753) Entering IECommandExecutor::PopulateElementFinderMethods
T 2019-10-02 14:44:02:144 InputManager.cpp(40) Entering InputManager::InputManager
T 2019-10-02 14:44:02:144 InputManager.cpp(75) Entering InputManager::Initialize
T 2019-10-02 14:44:02:144 BrowserFactory.cpp(998) Entering BrowserFactory::GetExecutableLocation
T 2019-10-02 14:44:02:144 BrowserFactory.cpp(1039) Entering BrowserFactory::GetIEVersion
T 2019-10-02 14:44:02:145 CommandHandlerRepository.cpp(108) Entering CommandHandlerRepository::PopulateCommandHandlers
T 2019-10-02 14:44:02:146 IESession.cpp(99) Created thread for command executor returns HWND: '00160D9C'
T 2019-10-02 14:44:02:146 IESession.cpp(103) Session id is retrived from command executor window: '3010f596-51cd-490f-b15e-a4a064108ed7'
D 2019-10-02 14:44:02:146 IESession.cpp(109) Releasing session initialization mutex
T 2019-10-02 14:44:02:146 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2019-10-02 14:44:02:146 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2019-10-02 14:44:02:146 command.cc(31) Entering Command::Deserialize
D 2019-10-02 14:44:02:146 command.cc(36) Raw JSON command: { "name" : "newSession", "locator" : { }, "parameters" : {
  "desiredCapabilities": {
    "se:ieOptions": {
      "ie.usePerProcessProxy": "true",
      "ignoreProtectedModeSettings": true
    },
    "browserName": "internet explorer",
    "ie.usePerProcessProxy": "true",
    "ignoreProtectedModeSettings": true
  },
  "capabilities": {
    "firstMatch": [
      {
        "browserName": "internet explorer",
        "se:ieOptions": {
          "ie.usePerProcessProxy": "true",
          "ignoreProtectedModeSettings": true
        }
      }
    ]
  }
} }
T 2019-10-02 14:44:02:147 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2019-10-02 14:44:02:147 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
D 2019-10-02 14:44:02:147 CommandHandlers\NewSessionCommandHandler.cpp(46) Found W3C capabilities structure
D 2019-10-02 14:44:02:147 CommandHandlers\NewSessionCommandHandler.cpp(505) Validating capabilities object
D 2019-10-02 14:44:02:147 CommandHandlers\NewSessionCommandHandler.cpp(505) Validating capabilities object
D 2019-10-02 14:44:02:147 CommandHandlers\NewSessionCommandHandler.cpp(535) Found browserNamecapability. Validating value type is string.
D 2019-10-02 14:44:02:147 CommandHandlers\NewSessionCommandHandler.cpp(794) Found proxycapability. Validating value type is object.
T 2019-10-02 14:44:02:147 BrowserFactory.cpp(113) Entering BrowserFactory::Initialize
T 2019-10-02 14:44:02:147 IECommandExecutor.cpp(631) Entering IECommandExecutor::CreateNewBrowser
T 2019-10-02 14:44:02:147 BrowserFactory.cpp(142) Entering BrowserFactory::LaunchBrowserProcess
D 2019-10-02 14:44:02:147 BrowserFactory.cpp(146) Ignoring Protected Mode Settings: 1
D 2019-10-02 14:44:02:147 BrowserFactory.cpp(152) Has Valid Protected Mode Settings: 0
T 2019-10-02 14:44:02:147 BrowserFactory.cpp(226) Entering BrowserFactory::IsIELaunchURLAvailable
T 2019-10-02 14:44:02:163 BrowserFactory.cpp(130) Entering BrowserFactory::ClearCache
T 2019-10-02 14:44:02:163 BrowserFactory.cpp(247) Entering BrowserFactory::LaunchBrowserUsingIELaunchURL
D 2019-10-02 14:44:02:163 BrowserFactory.cpp(248) Starting IE using the IELaunchURL API
T 2019-10-02 14:44:02:941 IESession.cpp(212) Beginning wait for response length to be not zero
D 2019-10-02 14:44:02:941 BrowserFactory.cpp(202) IE launched successfully with process ID 28516
D 2019-10-02 14:44:02:942 BrowserFactory.cpp(208) Process with ID 28516 is executing iexplore.exe
T 2019-10-02 14:44:02:942 BrowserFactory.cpp(365) Entering BrowserFactory::AttachToBrowser
D 2019-10-02 14:44:02:942 BrowserFactory.cpp(375) Using Active Accessibility to find IWebBrowser2 interface
T 2019-10-02 14:44:02:942 BrowserFactory.cpp(414) Entering BrowserFactory::AttachToBrowserUsingActiveAccessibility
T 2019-10-02 14:44:03:801 server.cc(174) Entering Server::ProcessRequest
T 2019-10-02 14:44:03:801 server.cc(183) Process request with: URI: / HTTP verb: GET
body: {}
T 2019-10-02 14:44:03:801 server.cc(445) Entering Server::SendHttpOk
D 2019-10-02 14:44:04:753 BrowserFactory.cpp(434) Found window handle 00271522 for window with class 'Internet Explorer_Server' belonging to process with id 28516
T 2019-10-02 14:44:04:753 BrowserFactory.cpp(329) Entering BrowserFactory::GetDocumentFromWindowHandle
T 2019-10-02 14:44:04:810 server.cc(174) Entering Server::ProcessRequest
T 2019-10-02 14:44:04:810 server.cc(183) Process request with: URI: /favicon.ico HTTP verb: GET
body: {}
T 2019-10-02 14:44:04:810 server.cc(272) Entering Server::DispatchCommand
T 2019-10-02 14:44:04:810 server.cc(583) Entering Server::LookupCommand
D 2019-10-02 14:44:04:810 server.cc(281) Command: GET /favicon.ico {}
D 2019-10-02 14:44:04:810 server.cc(338) Response: { "error" : "unknown method", "message" : "Command not found: GET /favicon.ico" }
T 2019-10-02 14:44:04:810 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-02 14:44:04:810 response.cc(30) Entering Response::Deserialize
T 2019-10-02 14:44:04:810 server.cc(445) Entering Server::SendHttpOk
D 2019-10-02 14:44:04:975 BrowserFactory.cpp(396) Ignoring zoom setting: 0
T 2019-10-02 14:44:04:975 BrowserFactory.cpp(574) Entering BrowserFactory::GetBrowserZoomLevel
T 2019-10-02 14:44:05:003 BrowserFactory.cpp(614) Entering BrowserFactory::GetZoomLevel
D 2019-10-02 14:44:05:066 BrowserFactory.cpp(694) Browser zoom level is 100%
I 2019-10-02 14:44:05:068 IECommandExecutor.cpp(654) Persistent hovering set to: 1
T 2019-10-02 14:44:05:068 ProxyManager.cpp(97) ProxyManager::SetProxySettings
D 2019-10-02 14:44:05:068 ProxyManager.cpp(113) Using existing system proxy settings.
T 2019-10-02 14:44:05:068 DocumentHost.cpp(33) Entering DocumentHost::DocumentHost
T 2019-10-02 14:44:05:068 CookieManager.cpp(49) Entering CookieManager::Initialize
T 2019-10-02 14:44:05:069 Browser.cpp(33) Entering Browser::Browser
T 2019-10-02 14:44:05:069 Browser.cpp(293) Entering Browser::AttachEvents
T 2019-10-02 14:44:05:099 IECommandExecutor.cpp(621) Entering IECommandExecutor::AddManagedBrowser
T 2019-10-02 14:44:05:099 IECommandExecutor.cpp(625) Setting current browser id to 0fef42de-efd9-470a-b7cf-21ff6ab5fc41
T 2019-10-02 14:44:05:100 response.cc(72) Entering Response::SetSuccessResponse
T 2019-10-02 14:44:05:100 response.cc(78) Entering Response::SetResponse
T 2019-10-02 14:44:05:100 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-02 14:44:05:100 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2019-10-02 14:44:05:100 response.cc(51) Entering Response::Serialize
T 2019-10-02 14:44:05:100 IESession.cpp(221) Found non-zero response length
T 2019-10-02 14:44:05:100 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2019-10-02 14:44:05:101 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
T 2019-10-02 14:44:05:101 response.cc(30) Entering Response::Deserialize
D 2019-10-02 14:44:05:101 server.cc(338) Response: {"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"internet explorer","browserVersion":"11","pageLoadStrategy":"normal","platformName":"windows","se:ieOptions":{"browserAttachTimeout":0,"elementScrollBehavior":0,"enablePersistentHover":true,"ie.browserCommandLineSwitches":"","ie.ensureCleanSession":false,"ie.fileUploadDialogTimeout":3000,"ie.forceCreateProcessApi":false,"ignoreProtectedModeSettings":true,"ignoreZoomSetting":false,"initialBrowserUrl":"http://localhost:38571/","nativeEvents":true,"requireWindowFocus":false},"setWindowRect":true},"sessionId":"3010f596-51cd-490f-b15e-a4a064108ed7"}}

T 2019-10-02 14:44:05:101 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-02 14:44:05:101 response.cc(30) Entering Response::Deserialize
T 2019-10-02 14:44:05:101 server.cc(445) Entering Server::SendHttpOk
T 2019-10-02 14:44:06:119 server.cc(174) Entering Server::ProcessRequest
T 2019-10-02 14:44:06:120 server.cc(238) Entering Server::ReadRequestBody
T 2019-10-02 14:44:06:120 server.cc(183) Process request with: URI: /session/3010f596-51cd-490f-b15e-a4a064108ed7/timeouts HTTP verb: POST
body: {
  "implicit": 0
}
T 2019-10-02 14:44:06:120 server.cc(272) Entering Server::DispatchCommand
T 2019-10-02 14:44:06:120 server.cc(583) Entering Server::LookupCommand
D 2019-10-02 14:44:06:120 server.cc(281) Command: POST /session/3010f596-51cd-490f-b15e-a4a064108ed7/timeouts {
  "implicit": 0
}
T 2019-10-02 14:44:06:120 server.cc(378) Entering Server::LookupSession
T 2019-10-02 14:44:06:120 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2019-10-02 14:44:06:120 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2019-10-02 14:44:06:120 command.cc(31) Entering Command::Deserialize
D 2019-10-02 14:44:06:120 command.cc(36) Raw JSON command: { "name" : "setTimeouts", "locator" : { "sessionid" : "3010f596-51cd-490f-b15e-a4a064108ed7" }, "parameters" : {
  "implicit": 0
} }
T 2019-10-02 14:44:06:121 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2019-10-02 14:44:06:121 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2019-10-02 14:44:06:121 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-02 14:44:06:121 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2019-10-02 14:44:06:121 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2019-10-02 14:44:06:121 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2019-10-02 14:44:06:121 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2019-10-02 14:44:06:122 IECommandExecutor.cpp(543) No alert handle is found
T 2019-10-02 14:44:06:122 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-02 14:44:06:122 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2019-10-02 14:44:06:122 response.cc(51) Entering Response::Serialize
T 2019-10-02 14:44:06:122 IESession.cpp(212) Beginning wait for response length to be not zero
T 2019-10-02 14:44:06:122 IESession.cpp(221) Found non-zero response length
T 2019-10-02 14:44:06:123 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2019-10-02 14:44:06:123 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2019-10-02 14:44:06:123 server.cc(338) Response: {"value":null}

T 2019-10-02 14:44:06:123 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-02 14:44:06:123 response.cc(30) Entering Response::Deserialize
T 2019-10-02 14:44:06:123 server.cc(445) Entering Server::SendHttpOk
T 2019-10-02 14:44:07:132 server.cc(174) Entering Server::ProcessRequest
T 2019-10-02 14:44:07:132 server.cc(238) Entering Server::ReadRequestBody
T 2019-10-02 14:44:07:132 server.cc(183) Process request with: URI: /session/3010f596-51cd-490f-b15e-a4a064108ed7/execute/sync HTTP verb: POST
body: {
  "script": "return navigator.sayswho= (function() { var ua= navigator.userAgent, tem, M= ua.match(\u002f(opera|chrome|safari|firefox|msie|trident)\\\u002f?\\s*(\\.?\\d+(\\.\\d+)*)\u002fi) || []; if (\u002ftrident\u002fi.test(M[1])) {     tem=  \u002f\\brv[ :]+(\\d+)\u002fg.exec(ua) || [];     return 'IE '+(tem[1] || ''); } if(M[1]=== 'Chrome') {     tem= ua.match(\u002f\\b(OPR|Edge)\\\u002f(\\d+)\u002f);     if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera'); } M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?']; if((tem= ua.match(\u002fversion\\\u002f(\\d+)\u002fi))!= null) M.splice(1, 1, tem[1]); return M.join(' ').replace('MSIE', 'IE');})();",
  "args": [
  ]
}
T 2019-10-02 14:44:07:132 server.cc(272) Entering Server::DispatchCommand
T 2019-10-02 14:44:07:132 server.cc(583) Entering Server::LookupCommand
D 2019-10-02 14:44:07:132 server.cc(281) Command: POST /session/3010f596-51cd-490f-b15e-a4a064108ed7/execute/sync {
  "script": "return navigator.sayswho= (function() { var ua= navigator.userAgent, tem, M= ua.match(\u002f(opera|chrome|safari|firefox|msie|trident)\\\u002f?\\s*(\\.?\\d+(\\.\\d+)*)\u002fi) || []; if (\u002ftrident\u002fi.test(M[1])) {     tem=  \u002f\\brv[ :]+(\\d+)\u002fg.exec(ua) || [];     return 'IE '+(tem[1] || ''); } if(M[1]=== 'Chrome') {     tem= ua.match(\u002f\\b(OPR|Edge)\\\u002f(\\d+)\u002f);     if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera'); } M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?']; if((tem= ua.match(\u002fversion\\\u002f(\\d+)\u002fi))!= null) M.splice(1, 1, tem[1]); return M.join(' ').replace('MSIE', 'IE');})();",
  "args": [
  ]
}
T 2019-10-02 14:44:07:132 server.cc(378) Entering Server::LookupSession
T 2019-10-02 14:44:07:132 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2019-10-02 14:44:07:132 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2019-10-02 14:44:07:133 command.cc(31) Entering Command::Deserialize
D 2019-10-02 14:44:07:133 command.cc(36) Raw JSON command: { "name" : "executeScript", "locator" : { "sessionid" : "3010f596-51cd-490f-b15e-a4a064108ed7" }, "parameters" : {
  "script": "return navigator.sayswho= (function() { var ua= navigator.userAgent, tem, M= ua.match(\u002f(opera|chrome|safari|firefox|msie|trident)\\\u002f?\\s*(\\.?\\d+(\\.\\d+)*)\u002fi) || []; if (\u002ftrident\u002fi.test(M[1])) {     tem=  \u002f\\brv[ :]+(\\d+)\u002fg.exec(ua) || [];     return 'IE '+(tem[1] || ''); } if(M[1]=== 'Chrome') {     tem= ua.match(\u002f\\b(OPR|Edge)\\\u002f(\\d+)\u002f);     if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera'); } M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?']; if((tem= ua.match(\u002fversion\\\u002f(\\d+)\u002fi))!= null) M.splice(1, 1, tem[1]); return M.join(' ').replace('MSIE', 'IE');})();",
  "args": [
  ]
} }
T 2019-10-02 14:44:07:133 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2019-10-02 14:44:07:133 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2019-10-02 14:44:07:133 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-02 14:44:07:133 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2019-10-02 14:44:07:133 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2019-10-02 14:44:07:133 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2019-10-02 14:44:07:133 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2019-10-02 14:44:07:134 IECommandExecutor.cpp(543) No alert handle is found
T 2019-10-02 14:44:07:134 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-02 14:44:07:134 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2019-10-02 14:44:07:134 Browser.cpp(126) Entering Browser::GetDocument
I 2019-10-02 14:44:07:134 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2019-10-02 14:44:07:134 IESession.cpp(212) Beginning wait for response length to be not zero
T 2019-10-02 14:44:07:171 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2019-10-02 14:44:07:300 Browser.cpp(54) Entering Browser::OnQuit
T 2019-10-02 14:44:07:300 DocumentHost.cpp(252) Entering DocumentHost::PostQuitMessage
T 2019-10-02 14:44:07:382 Script.cpp(49) Entering Script::Initialize
T 2019-10-02 14:44:07:382 CommandHandlers\ExecuteScriptCommandHandler.cpp(85) Entering ExecuteScriptCommandHandler::PopulateArgumentArray
T 2019-10-02 14:44:07:382 Script.cpp(169) Entering Script::Execute
T 2019-10-02 14:44:07:382 Script.cpp(438) Entering Script::CreateAnonymousFunction
W 2019-10-02 14:44:07:441 Script.cpp(455) -2147024891 [Access is denied.]: Unable to execute code, call to IHTMLWindow2::execScript failed
W 2019-10-02 14:44:07:458 Script.cpp(180) Cannot create anonymous function
T 2019-10-02 14:44:07:458 response.cc(91) Entering Response::SetErrorResponse
W 2019-10-02 14:44:07:458 response.cc(92) Error response has status code 17 and message 'JavaScript error' message
T 2019-10-02 14:44:07:458 response.cc(85) Entering Response::SetErrorResponse
T 2019-10-02 14:44:07:459 response.cc(78) Entering Response::SetResponse
T 2019-10-02 14:44:07:603 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-02 14:44:07:603 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2019-10-02 14:44:07:603 response.cc(51) Entering Response::Serialize
T 2019-10-02 14:44:07:603 IECommandExecutor.cpp(250) Entering IECommandExecutor::OnBrowserQuit
T 2019-10-02 14:44:07:603 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2019-10-02 14:44:07:603 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2019-10-02 14:44:07:604 Browser.cpp(206) Entering Browser::GetContentWindowHandle
I 2019-10-02 14:44:07:604 Browser.cpp(214) Flushing window handle as it is no longer valid
I 2019-10-02 14:44:07:604 Browser.cpp(219) Restore window handle from tab
T 2019-10-02 14:44:07:604 Browser.cpp(659) Entering Browser::GetBrowserWindowHandle
W 2019-10-02 14:44:07:611 Browser.cpp(678) -2147023174 [The RPC server is unavailable.]: Unable to get service, call to IWebBrowser2::QueryInterface for IID_IServiceProvider failed
T 2019-10-02 14:44:07:611 DocumentHost.cpp(265) Entering DocumentHost::FindContentWindowHandle
D 2019-10-02 14:44:07:612 IECommandExecutor.cpp(543) No alert handle is found
T 2019-10-02 14:44:07:612 Browser.cpp(300) Entering Browser::DetachEvents
T 2019-10-02 14:44:07:612 IESession.cpp(221) Found non-zero response length
T 2019-10-02 14:44:07:613 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2019-10-02 14:44:07:613 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2019-10-02 14:44:07:613 server.cc(338) Response: {"value":{"data":null,"error":"javascript error","message":"JavaScript error","stacktrace":""}}

T 2019-10-02 14:44:07:613 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-02 14:44:07:613 response.cc(30) Entering Response::Deserialize
T 2019-10-02 14:44:07:613 server.cc(485) Entering Server::SendHttpInternalError
T 2019-10-02 14:44:08:659 server.cc(174) Entering Server::ProcessRequest
T 2019-10-02 14:44:08:659 server.cc(238) Entering Server::ReadRequestBody
T 2019-10-02 14:44:08:659 server.cc(183) Process request with: URI: /session/3010f596-51cd-490f-b15e-a4a064108ed7/url HTTP verb: POST
body: {
  "url": "https:\u002f\u002fsamsung-adzu4-staging.codeworldwide.com\u002f#"
}
T 2019-10-02 14:44:08:659 server.cc(272) Entering Server::DispatchCommand
T 2019-10-02 14:44:08:659 server.cc(583) Entering Server::LookupCommand
D 2019-10-02 14:44:08:659 server.cc(281) Command: POST /session/3010f596-51cd-490f-b15e-a4a064108ed7/url {
  "url": "https:\u002f\u002fsamsung-adzu4-staging.codeworldwide.com\u002f#"
}
T 2019-10-02 14:44:08:659 server.cc(378) Entering Server::LookupSession
T 2019-10-02 14:44:08:659 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2019-10-02 14:44:08:659 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2019-10-02 14:44:08:659 command.cc(31) Entering Command::Deserialize
D 2019-10-02 14:44:08:659 command.cc(36) Raw JSON command: { "name" : "get", "locator" : { "sessionid" : "3010f596-51cd-490f-b15e-a4a064108ed7" }, "parameters" : {
  "url": "https:\u002f\u002fsamsung-adzu4-staging.codeworldwide.com\u002f#"
} }
T 2019-10-02 14:44:08:659 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2019-10-02 14:44:08:659 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2019-10-02 14:44:08:659 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-02 14:44:08:660 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-02 14:44:08:660 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2019-10-02 14:44:08:660 IECommandExecutor.cpp(503) Unable to find current browser
T 2019-10-02 14:44:08:660 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-02 14:44:08:660 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-02 14:44:08:660 IECommandExecutor.cpp(591) Browser ID requested was an empty string
T 2019-10-02 14:44:08:660 response.cc(85) Entering Response::SetErrorResponse
T 2019-10-02 14:44:08:660 response.cc(78) Entering Response::SetResponse
T 2019-10-02 14:44:08:660 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-02 14:44:08:660 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-02 14:44:08:660 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2019-10-02 14:44:08:660 IECommandExecutor.cpp(520) Unable to get current browser
T 2019-10-02 14:44:08:660 response.cc(51) Entering Response::Serialize
T 2019-10-02 14:44:08:660 IESession.cpp(212) Beginning wait for response length to be not zero
T 2019-10-02 14:44:08:660 IESession.cpp(221) Found non-zero response length
T 2019-10-02 14:44:08:661 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2019-10-02 14:44:08:661 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2019-10-02 14:44:08:661 server.cc(338) Response: {"value":{"data":null,"error":"no such window","message":"Unable to get browser","stacktrace":""}}

T 2019-10-02 14:44:08:661 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-02 14:44:08:661 response.cc(30) Entering Response::Deserialize
T 2019-10-02 14:44:08:661 server.cc(465) Entering Server::SendHttpBadRequest
