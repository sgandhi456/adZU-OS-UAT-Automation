I 2019-10-11 13:47:58:614 server.cc(86) Starting WebDriver server on port: '40028' on host: ''
T 2019-10-11 13:47:58:615 server.cc(634) Entering Server::PopulateCommandRepository
T 2019-10-11 13:47:58:615 IEServer.cpp(32) Entering IEServer::IEServer
I 2019-10-11 13:47:58:615 IEServer.cpp(33) Driver version: 3.6.0.0 (32-bit)
T 2019-10-11 13:47:58:615 server.cc(121) Entering Server::Start
D 2019-10-11 13:47:58:615 server.cc(148) Civetweb ACL is -0.0.0.0/0,+127.0.0.1
T 2019-10-11 13:47:59:046 server.cc(174) Entering Server::ProcessRequest
T 2019-10-11 13:47:59:046 server.cc(183) Process request with: URI: /status HTTP verb: GET
body: {}
T 2019-10-11 13:47:59:047 server.cc(272) Entering Server::DispatchCommand
T 2019-10-11 13:47:59:047 server.cc(583) Entering Server::LookupCommand
D 2019-10-11 13:47:59:047 server.cc(281) Command: GET /status {}
T 2019-10-11 13:47:59:047 IEServer.cpp(51) Entering IEServer::GetStatus
T 2019-10-11 13:47:59:047 response.cc(72) Entering Response::SetSuccessResponse
T 2019-10-11 13:47:59:047 response.cc(78) Entering Response::SetResponse
T 2019-10-11 13:47:59:047 response.cc(51) Entering Response::Serialize
D 2019-10-11 13:47:59:047 server.cc(338) Response: {"value":{"build":{"version":"3.6.0.0 (32-bit)"},"message":"Ready to create session","os":{"arch":"x64","name":"windows","version":"10.0.17134.376 (WinBuild.160101.0800)"},"ready":true}}

T 2019-10-11 13:47:59:047 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-11 13:47:59:047 response.cc(30) Entering Response::Deserialize
T 2019-10-11 13:47:59:047 server.cc(445) Entering Server::SendHttpOk
T 2019-10-11 13:47:59:300 server.cc(174) Entering Server::ProcessRequest
T 2019-10-11 13:47:59:301 server.cc(238) Entering Server::ReadRequestBody
T 2019-10-11 13:47:59:301 server.cc(183) Process request with: URI: /session HTTP verb: POST
body: {
  "desiredCapabilities": {
    "se:ieOptions": {
      "ie.usePerProcessProxy": "true",
      "ignoreProtectedModeSettings": true
    },
    "browserName": "internet explorer",
    "ie.usePerProcessProxy": "true",
    "ignoreProtectedModeSettings": true
  },
  "capabilities": {
    "firstMatch": [
      {
        "browserName": "internet explorer",
        "se:ieOptions": {
          "ie.usePerProcessProxy": "true",
          "ignoreProtectedModeSettings": true
        }
      }
    ]
  }
}
T 2019-10-11 13:47:59:301 server.cc(272) Entering Server::DispatchCommand
T 2019-10-11 13:47:59:301 server.cc(583) Entering Server::LookupCommand
D 2019-10-11 13:47:59:301 server.cc(281) Command: POST /session {
  "desiredCapabilities": {
    "se:ieOptions": {
      "ie.usePerProcessProxy": "true",
      "ignoreProtectedModeSettings": true
    },
    "browserName": "internet explorer",
    "ie.usePerProcessProxy": "true",
    "ignoreProtectedModeSettings": true
  },
  "capabilities": {
    "firstMatch": [
      {
        "browserName": "internet explorer",
        "se:ieOptions": {
          "ie.usePerProcessProxy": "true",
          "ignoreProtectedModeSettings": true
        }
      }
    ]
  }
}
T 2019-10-11 13:47:59:301 IEServer.cpp(42) Entering IEServer::InitializeSession
T 2019-10-11 13:47:59:301 IESession.cpp(38) Entering IESession::Initialize
D 2019-10-11 13:47:59:301 IESession.cpp(53) Mutex acquired for session initalization
T 2019-10-11 13:47:59:301 IECommandExecutor.cpp(386) Entering IECommandExecutor::ThreadProc
T 2019-10-11 13:47:59:304 IECommandExecutor.cpp(47) Entering IECommandExecutor::OnCreate
T 2019-10-11 13:47:59:305 IECommandExecutor.cpp(753) Entering IECommandExecutor::PopulateElementFinderMethods
T 2019-10-11 13:47:59:305 InputManager.cpp(40) Entering InputManager::InputManager
T 2019-10-11 13:47:59:305 InputManager.cpp(75) Entering InputManager::Initialize
T 2019-10-11 13:47:59:305 BrowserFactory.cpp(998) Entering BrowserFactory::GetExecutableLocation
T 2019-10-11 13:47:59:305 BrowserFactory.cpp(1039) Entering BrowserFactory::GetIEVersion
T 2019-10-11 13:47:59:306 CommandHandlerRepository.cpp(108) Entering CommandHandlerRepository::PopulateCommandHandlers
T 2019-10-11 13:47:59:306 IESession.cpp(99) Created thread for command executor returns HWND: '00051A20'
T 2019-10-11 13:47:59:306 IESession.cpp(103) Session id is retrived from command executor window: 'ae9a5987-7638-4e88-8541-3a779af004a0'
D 2019-10-11 13:47:59:306 IESession.cpp(109) Releasing session initialization mutex
T 2019-10-11 13:47:59:306 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2019-10-11 13:47:59:306 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2019-10-11 13:47:59:306 command.cc(31) Entering Command::Deserialize
D 2019-10-11 13:47:59:307 command.cc(36) Raw JSON command: { "name" : "newSession", "locator" : { }, "parameters" : {
  "desiredCapabilities": {
    "se:ieOptions": {
      "ie.usePerProcessProxy": "true",
      "ignoreProtectedModeSettings": true
    },
    "browserName": "internet explorer",
    "ie.usePerProcessProxy": "true",
    "ignoreProtectedModeSettings": true
  },
  "capabilities": {
    "firstMatch": [
      {
        "browserName": "internet explorer",
        "se:ieOptions": {
          "ie.usePerProcessProxy": "true",
          "ignoreProtectedModeSettings": true
        }
      }
    ]
  }
} }
T 2019-10-11 13:47:59:307 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2019-10-11 13:47:59:307 IESession.cpp(212) Beginning wait for response length to be not zero
T 2019-10-11 13:47:59:307 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
D 2019-10-11 13:47:59:307 CommandHandlers\NewSessionCommandHandler.cpp(46) Found W3C capabilities structure
D 2019-10-11 13:47:59:307 CommandHandlers\NewSessionCommandHandler.cpp(505) Validating capabilities object
D 2019-10-11 13:47:59:307 CommandHandlers\NewSessionCommandHandler.cpp(505) Validating capabilities object
D 2019-10-11 13:47:59:307 CommandHandlers\NewSessionCommandHandler.cpp(535) Found browserNamecapability. Validating value type is string.
D 2019-10-11 13:47:59:307 CommandHandlers\NewSessionCommandHandler.cpp(794) Found proxycapability. Validating value type is object.
T 2019-10-11 13:47:59:307 BrowserFactory.cpp(113) Entering BrowserFactory::Initialize
T 2019-10-11 13:47:59:307 IECommandExecutor.cpp(631) Entering IECommandExecutor::CreateNewBrowser
T 2019-10-11 13:47:59:307 BrowserFactory.cpp(142) Entering BrowserFactory::LaunchBrowserProcess
D 2019-10-11 13:47:59:307 BrowserFactory.cpp(146) Ignoring Protected Mode Settings: 1
D 2019-10-11 13:47:59:307 BrowserFactory.cpp(152) Has Valid Protected Mode Settings: 0
T 2019-10-11 13:47:59:307 BrowserFactory.cpp(226) Entering BrowserFactory::IsIELaunchURLAvailable
T 2019-10-11 13:47:59:319 BrowserFactory.cpp(130) Entering BrowserFactory::ClearCache
T 2019-10-11 13:47:59:319 BrowserFactory.cpp(247) Entering BrowserFactory::LaunchBrowserUsingIELaunchURL
D 2019-10-11 13:47:59:319 BrowserFactory.cpp(248) Starting IE using the IELaunchURL API
D 2019-10-11 13:47:59:712 BrowserFactory.cpp(202) IE launched successfully with process ID 8476
D 2019-10-11 13:47:59:712 BrowserFactory.cpp(208) Process with ID 8476 is executing iexplore.exe
T 2019-10-11 13:47:59:713 BrowserFactory.cpp(365) Entering BrowserFactory::AttachToBrowser
D 2019-10-11 13:47:59:713 BrowserFactory.cpp(375) Using Active Accessibility to find IWebBrowser2 interface
T 2019-10-11 13:47:59:713 BrowserFactory.cpp(414) Entering BrowserFactory::AttachToBrowserUsingActiveAccessibility
T 2019-10-11 13:47:59:911 server.cc(174) Entering Server::ProcessRequest
T 2019-10-11 13:47:59:911 server.cc(183) Process request with: URI: / HTTP verb: GET
body: {}
T 2019-10-11 13:47:59:911 server.cc(445) Entering Server::SendHttpOk
T 2019-10-11 13:48:00:206 server.cc(174) Entering Server::ProcessRequest
T 2019-10-11 13:48:00:206 server.cc(183) Process request with: URI: /favicon.ico HTTP verb: GET
body: {}
T 2019-10-11 13:48:00:207 server.cc(272) Entering Server::DispatchCommand
T 2019-10-11 13:48:00:207 server.cc(583) Entering Server::LookupCommand
D 2019-10-11 13:48:00:207 server.cc(281) Command: GET /favicon.ico {}
D 2019-10-11 13:48:00:207 server.cc(338) Response: { "error" : "unknown method", "message" : "Command not found: GET /favicon.ico" }
T 2019-10-11 13:48:00:207 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-11 13:48:00:207 response.cc(30) Entering Response::Deserialize
T 2019-10-11 13:48:00:207 server.cc(445) Entering Server::SendHttpOk
D 2019-10-11 13:48:00:216 BrowserFactory.cpp(434) Found window handle 00011AB8 for window with class 'Internet Explorer_Server' belonging to process with id 8476
T 2019-10-11 13:48:00:216 BrowserFactory.cpp(329) Entering BrowserFactory::GetDocumentFromWindowHandle
D 2019-10-11 13:48:00:274 BrowserFactory.cpp(396) Ignoring zoom setting: 0
T 2019-10-11 13:48:00:274 BrowserFactory.cpp(574) Entering BrowserFactory::GetBrowserZoomLevel
T 2019-10-11 13:48:00:286 BrowserFactory.cpp(614) Entering BrowserFactory::GetZoomLevel
D 2019-10-11 13:48:00:307 BrowserFactory.cpp(694) Browser zoom level is 100%
I 2019-10-11 13:48:00:310 IECommandExecutor.cpp(654) Persistent hovering set to: 1
T 2019-10-11 13:48:00:310 ProxyManager.cpp(97) ProxyManager::SetProxySettings
D 2019-10-11 13:48:00:310 ProxyManager.cpp(113) Using existing system proxy settings.
T 2019-10-11 13:48:00:310 DocumentHost.cpp(33) Entering DocumentHost::DocumentHost
T 2019-10-11 13:48:00:310 CookieManager.cpp(49) Entering CookieManager::Initialize
T 2019-10-11 13:48:00:310 Browser.cpp(33) Entering Browser::Browser
T 2019-10-11 13:48:00:310 Browser.cpp(293) Entering Browser::AttachEvents
T 2019-10-11 13:48:00:313 IECommandExecutor.cpp(621) Entering IECommandExecutor::AddManagedBrowser
T 2019-10-11 13:48:00:313 IECommandExecutor.cpp(625) Setting current browser id to e1a29ebb-bcdb-45e5-aafe-f2d1d249909b
T 2019-10-11 13:48:00:314 response.cc(72) Entering Response::SetSuccessResponse
T 2019-10-11 13:48:00:314 response.cc(78) Entering Response::SetResponse
T 2019-10-11 13:48:00:314 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:00:314 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2019-10-11 13:48:00:314 response.cc(51) Entering Response::Serialize
T 2019-10-11 13:48:00:321 IESession.cpp(221) Found non-zero response length
T 2019-10-11 13:48:00:321 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2019-10-11 13:48:00:321 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
T 2019-10-11 13:48:00:321 response.cc(30) Entering Response::Deserialize
D 2019-10-11 13:48:00:321 server.cc(338) Response: {"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"internet explorer","browserVersion":"11","pageLoadStrategy":"normal","platformName":"windows","se:ieOptions":{"browserAttachTimeout":0,"elementScrollBehavior":0,"enablePersistentHover":true,"ie.browserCommandLineSwitches":"","ie.ensureCleanSession":false,"ie.fileUploadDialogTimeout":3000,"ie.forceCreateProcessApi":false,"ignoreProtectedModeSettings":true,"ignoreZoomSetting":false,"initialBrowserUrl":"http://localhost:40028/","nativeEvents":true,"requireWindowFocus":false},"setWindowRect":true},"sessionId":"ae9a5987-7638-4e88-8541-3a779af004a0"}}

T 2019-10-11 13:48:00:321 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-11 13:48:00:321 response.cc(30) Entering Response::Deserialize
T 2019-10-11 13:48:00:321 server.cc(445) Entering Server::SendHttpOk
T 2019-10-11 13:48:01:381 server.cc(174) Entering Server::ProcessRequest
T 2019-10-11 13:48:01:381 server.cc(238) Entering Server::ReadRequestBody
T 2019-10-11 13:48:01:381 server.cc(183) Process request with: URI: /session/ae9a5987-7638-4e88-8541-3a779af004a0/timeouts HTTP verb: POST
body: {
  "implicit": 0
}
T 2019-10-11 13:48:01:381 server.cc(272) Entering Server::DispatchCommand
T 2019-10-11 13:48:01:381 server.cc(583) Entering Server::LookupCommand
D 2019-10-11 13:48:01:381 server.cc(281) Command: POST /session/ae9a5987-7638-4e88-8541-3a779af004a0/timeouts {
  "implicit": 0
}
T 2019-10-11 13:48:01:381 server.cc(378) Entering Server::LookupSession
T 2019-10-11 13:48:01:381 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2019-10-11 13:48:01:382 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2019-10-11 13:48:01:382 command.cc(31) Entering Command::Deserialize
D 2019-10-11 13:48:01:382 command.cc(36) Raw JSON command: { "name" : "setTimeouts", "locator" : { "sessionid" : "ae9a5987-7638-4e88-8541-3a779af004a0" }, "parameters" : {
  "implicit": 0
} }
T 2019-10-11 13:48:01:382 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2019-10-11 13:48:01:382 IESession.cpp(212) Beginning wait for response length to be not zero
T 2019-10-11 13:48:01:382 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2019-10-11 13:48:01:382 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:01:382 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2019-10-11 13:48:01:382 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2019-10-11 13:48:01:382 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2019-10-11 13:48:01:382 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2019-10-11 13:48:01:382 IECommandExecutor.cpp(543) No alert handle is found
T 2019-10-11 13:48:01:382 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:01:382 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2019-10-11 13:48:01:382 response.cc(51) Entering Response::Serialize
T 2019-10-11 13:48:01:393 IESession.cpp(221) Found non-zero response length
T 2019-10-11 13:48:01:393 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2019-10-11 13:48:01:393 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2019-10-11 13:48:01:394 server.cc(338) Response: {"value":null}

T 2019-10-11 13:48:01:394 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-11 13:48:01:394 response.cc(30) Entering Response::Deserialize
T 2019-10-11 13:48:01:394 server.cc(445) Entering Server::SendHttpOk
T 2019-10-11 13:48:01:958 Browser.cpp(54) Entering Browser::OnQuit
T 2019-10-11 13:48:01:958 DocumentHost.cpp(252) Entering DocumentHost::PostQuitMessage
T 2019-10-11 13:48:01:958 IECommandExecutor.cpp(250) Entering IECommandExecutor::OnBrowserQuit
T 2019-10-11 13:48:01:958 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2019-10-11 13:48:01:958 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2019-10-11 13:48:01:958 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2019-10-11 13:48:01:959 IECommandExecutor.cpp(543) No alert handle is found
T 2019-10-11 13:48:01:959 Browser.cpp(300) Entering Browser::DetachEvents
T 2019-10-11 13:48:02:409 server.cc(174) Entering Server::ProcessRequest
T 2019-10-11 13:48:02:409 server.cc(238) Entering Server::ReadRequestBody
T 2019-10-11 13:48:02:409 server.cc(183) Process request with: URI: /session/ae9a5987-7638-4e88-8541-3a779af004a0/execute/sync HTTP verb: POST
body: {
  "script": "return navigator.sayswho= (function() { var ua= navigator.userAgent, tem, M= ua.match(\u002f(opera|chrome|safari|firefox|msie|trident)\\\u002f?\\s*(\\.?\\d+(\\.\\d+)*)\u002fi) || []; if (\u002ftrident\u002fi.test(M[1])) {     tem=  \u002f\\brv[ :]+(\\d+)\u002fg.exec(ua) || [];     return 'IE '+(tem[1] || ''); } if(M[1]=== 'Chrome') {     tem= ua.match(\u002f\\b(OPR|Edge)\\\u002f(\\d+)\u002f);     if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera'); } M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?']; if((tem= ua.match(\u002fversion\\\u002f(\\d+)\u002fi))!= null) M.splice(1, 1, tem[1]); return M.join(' ').replace('MSIE', 'IE');})();",
  "args": [
  ]
}
T 2019-10-11 13:48:02:409 server.cc(272) Entering Server::DispatchCommand
T 2019-10-11 13:48:02:410 server.cc(583) Entering Server::LookupCommand
D 2019-10-11 13:48:02:410 server.cc(281) Command: POST /session/ae9a5987-7638-4e88-8541-3a779af004a0/execute/sync {
  "script": "return navigator.sayswho= (function() { var ua= navigator.userAgent, tem, M= ua.match(\u002f(opera|chrome|safari|firefox|msie|trident)\\\u002f?\\s*(\\.?\\d+(\\.\\d+)*)\u002fi) || []; if (\u002ftrident\u002fi.test(M[1])) {     tem=  \u002f\\brv[ :]+(\\d+)\u002fg.exec(ua) || [];     return 'IE '+(tem[1] || ''); } if(M[1]=== 'Chrome') {     tem= ua.match(\u002f\\b(OPR|Edge)\\\u002f(\\d+)\u002f);     if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera'); } M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?']; if((tem= ua.match(\u002fversion\\\u002f(\\d+)\u002fi))!= null) M.splice(1, 1, tem[1]); return M.join(' ').replace('MSIE', 'IE');})();",
  "args": [
  ]
}
T 2019-10-11 13:48:02:410 server.cc(378) Entering Server::LookupSession
T 2019-10-11 13:48:02:410 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2019-10-11 13:48:02:410 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2019-10-11 13:48:02:410 command.cc(31) Entering Command::Deserialize
D 2019-10-11 13:48:02:410 command.cc(36) Raw JSON command: { "name" : "executeScript", "locator" : { "sessionid" : "ae9a5987-7638-4e88-8541-3a779af004a0" }, "parameters" : {
  "script": "return navigator.sayswho= (function() { var ua= navigator.userAgent, tem, M= ua.match(\u002f(opera|chrome|safari|firefox|msie|trident)\\\u002f?\\s*(\\.?\\d+(\\.\\d+)*)\u002fi) || []; if (\u002ftrident\u002fi.test(M[1])) {     tem=  \u002f\\brv[ :]+(\\d+)\u002fg.exec(ua) || [];     return 'IE '+(tem[1] || ''); } if(M[1]=== 'Chrome') {     tem= ua.match(\u002f\\b(OPR|Edge)\\\u002f(\\d+)\u002f);     if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera'); } M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?']; if((tem= ua.match(\u002fversion\\\u002f(\\d+)\u002fi))!= null) M.splice(1, 1, tem[1]); return M.join(' ').replace('MSIE', 'IE');})();",
  "args": [
  ]
} }
T 2019-10-11 13:48:02:410 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2019-10-11 13:48:02:410 IESession.cpp(212) Beginning wait for response length to be not zero
T 2019-10-11 13:48:02:410 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2019-10-11 13:48:02:410 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:02:410 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-11 13:48:02:410 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2019-10-11 13:48:02:410 IECommandExecutor.cpp(503) Unable to find current browser
T 2019-10-11 13:48:02:410 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:02:410 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-11 13:48:02:410 IECommandExecutor.cpp(591) Browser ID requested was an empty string
T 2019-10-11 13:48:02:410 response.cc(91) Entering Response::SetErrorResponse
W 2019-10-11 13:48:02:410 response.cc(92) Error response has status code 23 and message 'Unable to get browser' message
T 2019-10-11 13:48:02:410 response.cc(85) Entering Response::SetErrorResponse
T 2019-10-11 13:48:02:410 response.cc(78) Entering Response::SetResponse
T 2019-10-11 13:48:02:410 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:02:411 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-11 13:48:02:411 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2019-10-11 13:48:02:411 IECommandExecutor.cpp(520) Unable to get current browser
T 2019-10-11 13:48:02:411 response.cc(51) Entering Response::Serialize
T 2019-10-11 13:48:02:421 IESession.cpp(221) Found non-zero response length
T 2019-10-11 13:48:02:421 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2019-10-11 13:48:02:421 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2019-10-11 13:48:02:421 server.cc(338) Response: {"value":{"data":null,"error":"no such window","message":"Unable to get browser","stacktrace":""}}

T 2019-10-11 13:48:02:421 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-11 13:48:02:421 response.cc(30) Entering Response::Deserialize
T 2019-10-11 13:48:02:421 server.cc(465) Entering Server::SendHttpBadRequest
T 2019-10-11 13:48:03:449 server.cc(174) Entering Server::ProcessRequest
T 2019-10-11 13:48:03:449 server.cc(238) Entering Server::ReadRequestBody
T 2019-10-11 13:48:03:449 server.cc(183) Process request with: URI: /session/ae9a5987-7638-4e88-8541-3a779af004a0/url HTTP verb: POST
body: {
  "url": "https:\u002f\u002fsamsung-adzu4-staging.codeworldwide.com\u002f#"
}
T 2019-10-11 13:48:03:449 server.cc(272) Entering Server::DispatchCommand
T 2019-10-11 13:48:03:449 server.cc(583) Entering Server::LookupCommand
D 2019-10-11 13:48:03:449 server.cc(281) Command: POST /session/ae9a5987-7638-4e88-8541-3a779af004a0/url {
  "url": "https:\u002f\u002fsamsung-adzu4-staging.codeworldwide.com\u002f#"
}
T 2019-10-11 13:48:03:449 server.cc(378) Entering Server::LookupSession
T 2019-10-11 13:48:03:449 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2019-10-11 13:48:03:449 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2019-10-11 13:48:03:449 command.cc(31) Entering Command::Deserialize
D 2019-10-11 13:48:03:449 command.cc(36) Raw JSON command: { "name" : "get", "locator" : { "sessionid" : "ae9a5987-7638-4e88-8541-3a779af004a0" }, "parameters" : {
  "url": "https:\u002f\u002fsamsung-adzu4-staging.codeworldwide.com\u002f#"
} }
T 2019-10-11 13:48:03:449 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2019-10-11 13:48:03:450 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2019-10-11 13:48:03:450 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:03:450 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-11 13:48:03:450 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2019-10-11 13:48:03:450 IECommandExecutor.cpp(503) Unable to find current browser
T 2019-10-11 13:48:03:450 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:03:450 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-11 13:48:03:450 IECommandExecutor.cpp(591) Browser ID requested was an empty string
T 2019-10-11 13:48:03:450 response.cc(85) Entering Response::SetErrorResponse
T 2019-10-11 13:48:03:450 response.cc(78) Entering Response::SetResponse
T 2019-10-11 13:48:03:450 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:03:450 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-11 13:48:03:450 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2019-10-11 13:48:03:450 IECommandExecutor.cpp(520) Unable to get current browser
T 2019-10-11 13:48:03:450 response.cc(51) Entering Response::Serialize
T 2019-10-11 13:48:03:450 IESession.cpp(212) Beginning wait for response length to be not zero
T 2019-10-11 13:48:03:450 IESession.cpp(221) Found non-zero response length
T 2019-10-11 13:48:03:450 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2019-10-11 13:48:03:450 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2019-10-11 13:48:03:450 server.cc(338) Response: {"value":{"data":null,"error":"no such window","message":"Unable to get browser","stacktrace":""}}

T 2019-10-11 13:48:03:450 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-11 13:48:03:450 response.cc(30) Entering Response::Deserialize
T 2019-10-11 13:48:03:450 server.cc(465) Entering Server::SendHttpBadRequest
T 2019-10-11 13:48:04:482 server.cc(174) Entering Server::ProcessRequest
T 2019-10-11 13:48:04:482 server.cc(183) Process request with: URI: /status HTTP verb: GET
body: {}
T 2019-10-11 13:48:04:482 server.cc(272) Entering Server::DispatchCommand
T 2019-10-11 13:48:04:482 server.cc(583) Entering Server::LookupCommand
D 2019-10-11 13:48:04:482 server.cc(281) Command: GET /status {}
T 2019-10-11 13:48:04:482 IEServer.cpp(51) Entering IEServer::GetStatus
T 2019-10-11 13:48:04:482 response.cc(72) Entering Response::SetSuccessResponse
T 2019-10-11 13:48:04:482 response.cc(78) Entering Response::SetResponse
T 2019-10-11 13:48:04:482 response.cc(51) Entering Response::Serialize
D 2019-10-11 13:48:04:482 server.cc(338) Response: {"value":{"build":{"version":"3.6.0.0 (32-bit)"},"message":"Maximum number of sessions already created","os":{"arch":"x64","name":"windows","version":"10.0.17134.376 (WinBuild.160101.0800)"},"ready":false}}

T 2019-10-11 13:48:04:482 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-11 13:48:04:482 response.cc(30) Entering Response::Deserialize
T 2019-10-11 13:48:04:482 server.cc(445) Entering Server::SendHttpOk
T 2019-10-11 13:48:04:484 server.cc(174) Entering Server::ProcessRequest
T 2019-10-11 13:48:04:484 server.cc(183) Process request with: URI: /session/ae9a5987-7638-4e88-8541-3a779af004a0/title HTTP verb: GET
body: {}
T 2019-10-11 13:48:04:484 server.cc(272) Entering Server::DispatchCommand
T 2019-10-11 13:48:04:484 server.cc(583) Entering Server::LookupCommand
D 2019-10-11 13:48:04:484 server.cc(281) Command: GET /session/ae9a5987-7638-4e88-8541-3a779af004a0/title {}
T 2019-10-11 13:48:04:484 server.cc(378) Entering Server::LookupSession
T 2019-10-11 13:48:04:484 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2019-10-11 13:48:04:484 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2019-10-11 13:48:04:484 command.cc(31) Entering Command::Deserialize
D 2019-10-11 13:48:04:484 command.cc(36) Raw JSON command: { "name" : "getTitle", "locator" : { "sessionid" : "ae9a5987-7638-4e88-8541-3a779af004a0" }, "parameters" : {} }
T 2019-10-11 13:48:04:484 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2019-10-11 13:48:04:484 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2019-10-11 13:48:04:484 IESession.cpp(212) Beginning wait for response length to be not zero
T 2019-10-11 13:48:04:484 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:04:484 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-11 13:48:04:484 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2019-10-11 13:48:04:484 IECommandExecutor.cpp(503) Unable to find current browser
T 2019-10-11 13:48:04:484 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:04:484 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-11 13:48:04:484 IECommandExecutor.cpp(591) Browser ID requested was an empty string
T 2019-10-11 13:48:04:484 response.cc(85) Entering Response::SetErrorResponse
T 2019-10-11 13:48:04:484 response.cc(78) Entering Response::SetResponse
T 2019-10-11 13:48:04:484 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2019-10-11 13:48:04:484 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2019-10-11 13:48:04:484 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2019-10-11 13:48:04:484 IECommandExecutor.cpp(520) Unable to get current browser
T 2019-10-11 13:48:04:484 response.cc(51) Entering Response::Serialize
T 2019-10-11 13:48:04:495 IESession.cpp(221) Found non-zero response length
T 2019-10-11 13:48:04:495 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2019-10-11 13:48:04:495 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2019-10-11 13:48:04:496 server.cc(338) Response: {"value":{"data":null,"error":"no such window","message":"Unable to get browser","stacktrace":""}}

T 2019-10-11 13:48:04:496 server.cc(391) Entering Server::SendResponseToClient
T 2019-10-11 13:48:04:496 response.cc(30) Entering Response::Deserialize
T 2019-10-11 13:48:04:496 server.cc(465) Entering Server::SendHttpBadRequest
